***********************************************************************************************************************************
****************************************************        About_Linux        ****************************************************
***********************************************************************************************************************************

在 Linux 系统中,每个装置都被当成一个档案来对待
    Linux                               装置在Linux内的文件名
    IDE硬盘机                           /dev/hd[a-d]
    SCSI/SATA/USB硬盘机                 /dev/sd[a-p]
    USB快闪碟                           /dev/sd[a-p](不 SATA 相同)
    软盘驱动器                          /dev/fd[0-1]
    打印机                              25 针: /dev/lp[0-2]
                                        USB: /dev/usb/lp[0-15]
    鼠标                                USB: /dev/usb/mouse[0-15]
                                        PS2: /dev/psaux
    当前 CDROM/DVDROM                   /dev/cdrom
    当前的鼠标                          /dev/mouse
    磁带机                              IDE: /dev/ht0
                                        SCSI: /dev/st0
-----------------------------------------------------------------------------------------------------------------------------------

IDE 接口
    IDE\Jumper                              Master                              Slave
    IDE1(Primary)                           /dev/hda                            /dev/hdb
    IDE2(Secondary)                         /dev/hdc                            /dev/hdd
-----------------------------------------------------------------------------------------------------------------------------------

SATA 接口
    根据 Linux 核心侦测到磁盘的顺序
    1. SATA1 插槽上癿檔名:/dev/sda
    2. SATA5 插槽上癿檔名:/dev/sdb
    3. USB 磁盘(开机完成后扄被系统捉到):/dev/sdc
-----------------------------------------------------------------------------------------------------------------------------------

装置文件名没有/dev/hda3 /dev/hda4，因为前面四个号码都是保留给 Primary 和 Extended 用! 所以逡辑分割槽的装置名称号码就由 5 号开始了
-----------------------------------------------------------------------------------------------------------------------------------

spfdisk grub 启动开机选单程序
-----------------------------------------------------------------------------------------------------------------------------------

date(1)
    数字的含义
    1 用户在 shell 环境中可以操作的指令或可执行文件
    2 系统核心可呼叫的函数与工具等
    3 一些常用的函数(function)与函数库(library),大部分为 C 的函式库(libc)
    4 装置档案的说明,通常在/dev 下的档案
    5 配置文件或者是某些档案的格式
    6 游戏(games)
    7 惯例与协议等,例如 Linux 文件系统、网络协议、ASCII code 等等的说明
    8 系统管理员可用的管理命令
    9 跟 kernel 有关的文件
-----------------------------------------------------------------------------------------------------------------------------------

/usr/share/doc/
    帮助文档路径
-----------------------------------------------------------------------------------------------------------------------------------

划分不同的 partition:
    为什么磁盘分区这么重要!因为 Linux 每个目录被读写的频率不同,妥善的分割将会让我们的
    Linux 更安全! 通常我们会建议划分下列的磁盘区块:
    o /
    o /boot
    o /usr
    o /home
    o /var
    这样划分有些好处,例如/var 是系统默认的一些数据暂存或者是 cache 数据的储存目录, 像 e-
    mail 就存在这里面。如果还有使用 proxy 时,因为常常存取,所以有可能会造成磁盘损坏, 而
    当这部份的磁盘损坏时,由亍其他的地方是没问题的,因此资料得以保存,而且在处理时也比较
    容易!
-----------------------------------------------------------------------------------------------------------------------------------

        连接数   档案所属群组   档案最后被修改时间
           |          |                |
-rw-rw-r-- 1 zhujie zhujie  4229  4月  5 16:54 About_Linux
　　|           |             |                     |
档案类型权限  档案拥有者   档案容量               档名

    [档案权限类型]
        -rw-rw-r--
        |
    档案类型
        第一个字符代表这个档案是『目录、档案或链接文件等等』:
            当为[ d ]则是目录
            当为[ - ]则是档案
            若是[ l ]则表示为连结档(link file);
            若是[ b ]则表示为装置文件里面的可供储存的接口设备(可随机存取装置);
            若是[ c ]则表示为装置文件里面的串行端口设备,例如键盘、鼠标(一次性读取装置)。

        -rw-rw-r--
         |||
    档案拥有者权限
        接下来的字符中,以三个为一组,且均为『rw-』 的三个参数的组合。其中,[ r ]代表可读
            (read)、[ w ]代表可写(write)、[ x ]代表可执行(execute)。 要注意的是,这三个权限的位置不
            会改变,如果没有权限,就会出现减号[ - ]而已。
            第一组为『档案拥有者的权限』,以『About_Linux』那个档案为例, 该档案的拥有者可以
            读写,但不可执行;

        -rw-rw-r--
            |||
    档案所属群组权限
        第二组为『同群组的权限』

        -rw-rw-r--
               |||
    档案所属群组权限
        第三组为『其他非本群组的权限』

    [连接数]
    第二栏表示有多少档名连结到此节点(i-node):
        每个档案都会将他的权限与属性记录到文件系统的 i-node 中,不过,我们使用的目录树却是使用文件
        名来记录, 因此每个档名就会连结到一个 i-node 啰!这个属性记录的,就是有多少不同的档名连结到
        相同的一个 i-node 号码去就是了。

    [档案拥有者]
    第三栏表示这个档案(或目录)的『拥有者账号』

    [档案所属群组]
    第四栏表示这个档案的所属群组

    [档案容量]
    第五栏为这个档案的容量大小,默认单位为 bytes

    [档案最后被修改时间]
    第六栏为这个档案的建档日期或者是最近的修改日期

    [档名]
    第七栏为这个档案的档名
        这个字段就是档名了。比较特殊的是:如果档名前多一个『 . 』,则代表这个档案为『隐藏档』,例
        如上表中的.gconf 那一行,该档案就是隐藏档。 你可以使用『ls』及『ls -a』这两个指令去感受一下什
        举是隐藏档啰!
-----------------------------------------------------------------------------------------------------------------------------------

Linux 档案的基本权限就有九个,分别是 owner/group/others 三种身份各有自己的
read/write/execute 权限, 先复习一下刚刚上面提到的数据:档案的权限字符为:『-
rwxrwxrwx』, 这九个权限是三个三个一组的!其中,我们可以使用数字来代表各个权限,各
权限的分数对照表如下:
r:4
w:2
x:1
每种身份(owner/group/others)各自的三个权限(r/w/x)分数是需要累加的,例如当权限为: [-
rwxrwx---] 分数则是:
owner = rwx = 4+2+1 = 7
group = rwx = 4+2+1 = 7
others= --- = 0+0+0 = 0

chmod 770 test.sh
-----------------------------------------------------------------------------------------------------------------------------------

还有一个改变权限的方法呦!从之前的介绍中我们可以发现,基本上就九个权限分别是(1)user
(2)group (3)others 三种身份啦!那举我们就可以藉由 u, g, o 来代表三种身份的权限!此外,
a 则代表 all 亦即全部的身份!那举读写的权限就可以写成 r, w, x 啰!也就是可以使用底下的方式来看:
                        u                +(加入)                 r        档案或目录
    chmod               g                -(除去)                 w
                        o                =(设定)                 x
                        a
-----------------------------------------------------------------------------------------------------------------------------------

r (read):可读取此一档案的实际内容,如读取文本文件的文字内容等;
w (write):可以编辑、新增或者是修改该档案的内容(但不能删除该档案);
x (execute):该档案具有可以被系统执行的权限

r (read contents in directory):
    表示具有读取目录结构列表的权限,所以当你具有读取(r)一个目录的权限时,表示你可以查询该
    目录下的文件名数据。 所以你就可以利用 ls 这个指令将该目录的内容列表显示出来!

w (modify contents of directory):
    这个可写入的权限对目录来说,是很了不起的! 因为他表示你具有异动该目录结构列表的权
    限,也就是底下这些权限:
    o 建立新的档案或目录;
    o 删除已经存在的档案或目录(不论该档案的权限为何!)
    o 将已存在的档案或目录更名;
    o 搬移该目录内的档案、目录位置。
    总之,目录的 w 权限就与该目录底下的文件名异动有关就对了啦!

x (access directory):
    咦!目录的执行权限有啥用途啊?目录只是记录文件名而已,总不能拿来执行吧?没错!目录不
    可以被执行,目录的 x 代表的是用户能否进入该目录成为工作目录的用途! 所谓的工作目录
    (work directory)就是你目前所在的目录啦!举例来说,当你登入 Linux 时, 你所在的家目录就是你当下的工作目录。而变换目录的指令是『cd』(change directory)啰!
-----------------------------------------------------------------------------------------------------------------------------------

*.sh : 脚本或批处理文件 (scripts),因为批处理文件为使用 shell 写成的,所以扩展名就编成 .sh 啰;

*Z, *.tar, *.tar.gz, *.zip, *.tgz: 经过打包的压缩文件。这是因为压缩软件分别为 gunzip, tar 等
等的,由于不同的压缩软件,而取其相关的扩展名啰!

*.html, *.php:网页相关档案,分别代表 HTML 语法与 PHP 语法的网页档案啰! .html 的档案
可使用网页浏览器来直接开吪,至于 .php 的档案, 则可以透过 client 端的浏览器来 server 端
浏览,以得到运算后的网页结果呢!
-----------------------------------------------------------------------------------------------------------------------------------

                    Filesystem Hierarchy Standard (FHS)

                        可分享的(shareable)             不可分享的(unshareable)
不变的(static)          /usr (软件放置处)               /etc (配置文件)
                        /opt (第三方协力软件)           /boot (开机不核心档)
可变动的(variable)      /var/mail (使用者邮件信箱)      /var/run (程序相关)
                        /var/spool/news (新闻组)        /var/lock (程序相关)

可分享的:可以分享给其他系统挂载使用的目录,所以包括执行文件不用户的邮件等数据, 是
能够分享给网络上其他主机挂载用的目录

不可分享的:自己机器上面运作的装置档案或者是不程序有关的 socket 档案等, 由于仅与自身
机器有关,所以当然就不适合分享给其他主机了

不变的:有些数据是不会经常变动的,跟随着 distribution 而不变动。 例如函式库、文件说明
文件、系统管理员所管理的主机服务配置文件等等

可变动的:经常改变的数据,例如登录文件、一般用户可自行收受的新闻组等
-----------------------------------------------------------------------------------------------------------------------------------

FHS 针对目录树架构仅定义出三层目录底下应该放置什么数据而已,分别是底下这三个目录的定义
/ (root, 根目录):与开机系统有关;
/usr (unix software resource):不软件安装/执行有关;
/var (variable):不系统运作过程有关。
-----------------------------------------------------------------------------------------------------------------------------------

目录                    应放置档案内容
/bin                    系统有很多放置执行文件的目录,但/bin 比较特殊。因为/bin 放置的是在单人维护模
                        式下还能够被操作的指令。 在/bin 底下的指令可以被 root 不一般账号所使用,主要
                        有:cat, chmod, chown, date, mv, mkdir, cp, bash 等等常用的指令。

/boot                   这个目录主要在放置开机会使用到的档案,包括 Linux 核心档案以及开机选单与开机
                        所需配置文件等等。 Linux kernel 常用的档名为:vmlinuz,如果使用的是 grub 这
                        个开机管理程序, 则还会存在/boot/grub/这个目录喔!

/dev                    在 Linux 系统上,任何装置与接口设备都是以档案的型态存在二这个目录当中的。 你
                        只要透过存取这个目录底下的某个档案,就等二存取某个装置啰~ 比要重要的档案有
                        /dev/null, /dev/zero, /dev/tty, /dev/lp*, /dev/hd*, /dev/sd*等等

/etc                    系统主要的配置文件几乎都放置在这个目录内,例如人员的账号密码文件、 各种服务
                        的初始档等等。一般来说,这个目录下的各文件属性是可以让一般使用者查阅的, 但
                        是只有 root 有权力修改。FHS 建议不要放置可执行文件(binary)在这个目录中喔。比
                        较重要的档案有: /etc/inittab, /etc/init.d/, /etc/modprobe.conf, /etc/X11/,
                        /etc/fstab, /etc/sysconfig/ 等等。另外,其下重要的目录有:

                        /etc/init.d/:   所有服务的预设启动 script 都是放在这里的,例如要启动或者关
                        闭 iptables 的话:『 /etc/init.d/iptables start』、『/etc/init.d/iptables stop』

                        /etc/xinetd.d/:     这就是所谓的 super daemon 管理的各顷服务的配置文件目录。

                        /etc/X11/:与 X Window 有关的各种配置文件都在这里,尤其是 xorg.conf

/home                   这个 X Server 的配置文件。这是系统默认的用户家目录(home directory)。在你新增一个一般使用者账号时, 默
                        认的用户家目录都会规范到这里来。比较重要的是,家目录有两种代号喔:
                        ~:代表目前这个用户的家目录,而
                        ~dmtsai :则代表 dmtsai 的家目录!

/lib                    系统的函式库非常的多,而/lib 放置的则是在开机时会用到的函式库, 以及在/bin 或
                        /sbin 底下的指令会呼叫的函式库而已。 什么是函式库呢?妳可以将他想成是『外
                        挂』,某些指令必项要有这些『外挂』才能够顸利完成程序的执行之意。 尤其重要的
                        是/lib/modules/这个目录, 因为该目录会放置核心相关的模块(驱动程序)喔!

/media                  media 是『媒体』的英文,顾名思义,这个/media 底下放置的就是可移除的装置
                        啦! 包括软盘、光盘、DVD 等等装置都暂时挂载二此。常见的档名有:
                        /media/floppy, /media/cdrom 等等。

/mnt                    如果妳想要暂时挂载某些额外的装置,一般建议妳可以放置到这个目录中。 在古早时
                        候,这个目录的用途与/media 相同啦!只是有了/media 之后,这个目录就用来暂时
                        挂载用了。

/opt                    这个是给第三方协力软件放置的目录。什么是第三方协力软件啊? 举例来说,KDE
                        这个桌面管理系统是一个独立的计划,不过他可以安装到 Linux 系统中,因此 KDE
                        的软件就建议放置到此目录下了。 另外,如果妳想要自行安装额外的软件(非原本的
                        distribution 提供的),那么也能够将你的软件安装到这里来。 不过,以前的 Linux 系
                        统中,我们还是习惯放置在/usr/local 目录下呢!

/root                   系统管理员(root)的家目录。之所以放在这里,是因为如果进入单人维护模式而仅挂
                        载根目录时, 该目录就能够拥有 root 的家目录,所以我们会希望 root 的家目录与根
                        目录放置在同一个分割槽中。

/sbin                   Linux 有非常多指令是用来设定系统环境的,这些指令只有 root 才能够利用来『设
                        定』系统,其他用户最多只能用来『查询』而已。 放在/sbin 底下的为开机过程中所
                        需要的,里面包括了开机、修复、还原系统所需要的指令。 至于某些服务器软件程
                        序,一般则放置到/usr/sbin/当中。至于本机自行安装的软件所产生的系统执行文件
                        (system binary), 则放置到/usr/local/sbin/当中了。常见的指令包括:fdisk, fsck,
                        ifconfig, init, mkfs 等等。

/srv                    srv 可以视为『service』的缩写,是一些网络服务启动之后,这些服务所需要取用的
                        数据目录。 常见的服务例如 WWW, FTP 等等。举例来说,WWW 服务器需要的网页
                        资料就可以放置在/srv/www/里面。

/tmp                    这是让一般用户或者是正在执行的程序暂时放置档案的地方。 这个目录是任何人都能
                        够存取的,所以你需要定期的清理一下。当然,重要数据不可放置在此目录啊! 因为
                        FHS 甚至建议在开机时,应该要将/tmp 下的数据都删除唷!

亊实上 FHS 针对根目录所定义的标准就仅有上面的咚咚,不过我们的 Linux 底下还有讲多目录你也需
要了览一下的。 底下是几个在 Linux 当中也是非常重要的目录喔:

目录                                    应放置档案内容
/lost+found             这个目录是使用标准的 ext2/ext3 文件系统格式才会产生的一个目录,目的在二当
                        文件系统发生错诨时, 将一些遗失的片段放置到这个目录下。这个目录通常会在
                        分割槽的最顶层存在, 例如你加装一颗硬盘二/disk 中,那在这个系统下就会自动
                        产生一个这样的目录『/disk/lost+found』

/proc                   这个目录本身是一个『虚拟文件系统(virtual filesystem)』喔!他放置的数据都是
                        在内存当中, 例如系统核心、行程信息(process)、周边装置的状态及网络状态等
                        等。因为这个目录下的数据都是在内存当中, 所以本身不占任何硬盘空间啊!比
                        较重要的档案例如:/proc/cpuinfo, /proc/dma, /proc/interrupts,
                        /proc/ioports, /proc/net/* 等等。

/sys                    这个目录其实跟/proc 非常类似,也是一个虚拟的文件系统,主要也是记录不核心相关的信息。
                        包括目前已加载的核心模块不核心侦测到的硬件装置信息等等。这个目录同样不占硬盘容量喔!
